<?php
// +----------------------------------------------------------------------
// | QinfoCMS [ WE CAN DO IT JUST THINK IT ]
// +----------------------------------------------------------------------
// | Copyright (c) 2013 http://www.qinfo360.com All rights reserved.
// +----------------------------------------------------------------------
// | Author: molong <register@qinfo360.com> <http://www.qinfo360.com>
// +----------------------------------------------------------------------

namespace app\cdp\model;
use app\common\model\Base;
use app\device\model\Device;
use app\device\model\ComputeVirtual;


class Cdp extends Base {

	protected $auto   = array('status', 'update_time');
	protected $insert = array('create_time');
	protected $device;


	function initialize()
	{
		parent::initialize(); // TODO: Change the autogenerated stub
		$this->device = new Device();
	}


	// 获取Cdp列表
	public function getList(){

        $uid = session('user_auth.uid');
        $device_ids = db('device_auth')->where(array('uid'=>$uid))->find();
        $device_ids = explode(',',$device_ids['device_id']);
        if ($uid!=1){
            $map['id'] = array('in',$device_ids);
        }
        $map['status'] = 1;
		$list = $this->where(array('status'=>1))->order('device_id desc')->paginate($this->list_row);

		if($list){
			foreach ($list as $key => &$vo) {

				$deviceInfo = $this->device->getDeviceInfo($vo['device_id']);
				if($deviceInfo){
					$deviceInfo['system_type'] = Device::get_system_type($vo['device_id']);
					$vo['data'] = $deviceInfo;
				}else{
					$this->where(array('device_id'=>$vo["device_id"]))->delete();
					unset($list[$key]);
				}
			}
		}
		return $list;
	}


	// 添加设备
	public function add($data){


		//cdp模块根据授权文件过滤
		if(!$this->license_filter(count($data))){
			return false;
		}

		foreach ($data as $id) {

			$device_info = $this->device->getDeviceInfo($id);
			if(!$device_info){
				$this->error=lang('device_does_not_exist');
				return false;
			}

			$cdp_info = $this->where(array('device_id'=>$id))->find();

			if($cdp_info && $cdp_info['status']==1){
				$this->error = lang('device_already_exists');
				return false;
			}

			$cdp_data['device_id'] = $id;
			$cdp_data['create_time'] = time();
			$cdp_data['status'] = 1;


			if($cdp_info && $cdp_info['status']==-1){
				$res_cdp = $this->where(array('device_id'=>$id))->update($cdp_data);
			}else{

				$res_cdp = $this->isUpdate(false)->save($cdp_data);
			}

			if($res_cdp){
				if($device_info['app']){
					$device_data['app'] = $device_info['app'].',cdp';
				}else{
					$device_data['app'] ='cdp';
				}
				$res = $this->device->where(array('id'=>$id))->update($device_data);

				if(!$res){
					$this->error = lang('edit').lang('fail');
					return false;
				}
			}else{
					$this->error = lang('add').lang('fail');
					return false;
			}
		}

		return true;
	}


	//删除设备
	public function del($id,$del_data=0){

		$device_info = $this->device->getDeviceInfo($id);
		if(!$device_info){

			$this->error=lang('device_does_not_exist');
			return false;
		}
		$app = explode(",",$device_info['app']);
		foreach($app as $k=>$v){
			if($v == 'cdp'){
				unset($app[$k]);
			}
		}
		$device_data['app'] = implode(",",$app);

		//删除设备下的备份数据
		if($del_data){
			if(Device::del_device_data($id)){
				$res = $this->device->save($device_data,['id'=>$id]);
			}else{
				$this->error = lang('device').lang('delete').lang('fail');
				return false;
			}
		}else{
			$res = $this->device->save($device_data,['id'=>$id]);
		}

		if($res){

			$data['status'] = -1;
			$res_cdp = $this->save($data,['device_id'=>$id]);
			if($res_cdp){
				return true;
			}else{
				 $this->error = lang('cdp').lang('delete').lang('fail');
				return false;
			}
		}else{

			 $this->error = lang('device').lang('delete').lang('fail');
			 return false;
		}
	}



	/*	 SELECT  device.id , COUNT(device.id) AS task_count
			 FROM qinfo_cdp AS cdp
			 INNER JOIN qinfo_device AS device ON cdp.`device_id`=device.`id`
			 LEFT JOIN qinfo_cdp_task AS task ON device.`id`=task.`device_id`
			 WHERE cdp.`status`=1
			 GROUP BY device.`id`;*/
	public function getDevice($type='cdp')
	{
		$field= ['id','ip','alias','hardware_info'];
		$prefix = config('database.prefix');
//		$field_str = '';
//		$alias = 'device';
////
//		foreach($field as $v){
//			$field_str .= $alias.".$v,";
//		}

//		$field_str = rtrim($field_str,',');
//		$sql = "select $field_str ,Count($alias.id) AS task_count from "
//				.$prefix."cdp as cdp INNER JOIN "
//				.$prefix.
//				"device as $alias on cdp.device_id=device.id ".
//				"LEFT JOIN $prefix"."cdp_task as task ON $alias.id=task.device_id And task.type='cdp' ".
//				"WHERE cdp.status=1 ".
//				"GROUP BY $alias.id";

//		return $this->query($sql);

		$device = db('device')->field($field)->join('cdp',array('cdp.device_id=id'))->select();
		foreach($device as $k=>&$v){
			$count = db('cdp_task')->where(array('device_id'=>$v['id'],'type'=>$type))->count('id');
			if($count==0){
				unset($device[$k]);
			}
			$v['task_count'] = $count;
		}
		return $device;
	}


	// 授权过滤

	private function license_filter($addCount){

		$license  = get_license();
		$module = $license['config_info']['module'];

		$cdp_size = $license['config_info']['cdp_size'];

		if(!in_array('cdp',$module)){
			 $this->error=lang('have_no_ permission_add_cdp');
			 return false;
		}

		$where['status'] = array('neq','-1');
		$count = $this->where($where)->count();


		if($cdp_size < ($count + $addCount)){
			$this->error=lang('add_count_over_permit');
			return false;
		}

		return true;
	}

	protected function getCreateTimeAttr($value){
		return date('Y-m-d',$value);
	}

	/**************日志信息*********************/
	static function addCdpDeviceLog($ids,$result,$desc=''){


		$extend['color'] = $result?"green":"red";
		$extend['result'] = $result?"成功":'失败';
		$extend['desc'] = $desc;
		$device_model = new Device();
		$map = "ip";
		if(!$ids) return true;
		foreach($ids as $item){
			$info = $device_model->getDeviceInfo($item,$map);
			if($info){
				$extend['ip'] = $info['ip'];
			}else{
				continue;
			}
		 action_log('add_cdp_device', 'cdp_device', 1, session('user_auth.uid'),$extend);
		}

	}
	static function delCdpDeviceLog($id,$result,$desc=''){


		$extend['color'] = $result?"green":"red";
		$extend['result'] = $result?"成功":'失败';
		$extend['desc'] = $desc;
		$device_model = new Device();
		$map = "ip";
		$info = $device_model->getDeviceInfo($id,$map);
		$extend['ip'] = $info['ip'];
		action_log('del_cdp_device', 'cdp_device', 1, session('user_auth.uid'),$extend);

	}


//	protected function setStatusAttr($value) {
//		return $value ? $value : 0;
//	}
//
//	protected function setIsinstallAttr($value) {
//		return $value ? $value : 0;
//	}
//
//	protected function getStatusTextAttr($value, $data) {
//		return $data['status'] ? "启用" : "禁用";
//	}
//
//	protected function getUninstallAttr($value, $data) {
//		return 0;
//	}

}